// Code generated by dagger-compiler.  Do not edit.
package com.paylogic.scanwarelite;

import dagger.internal.BindingsGroup;
import dagger.internal.ModuleAdapter;
import dagger.internal.ProvidesBinding;
import javax.inject.Provider;

/**
 * A manager of modules and provides adapters allowing for proper linking and
 * instance provision of types served by {@code @Provides} methods.
 */
public final class ScanwareLiteModule$$ModuleAdapter extends ModuleAdapter<ScanwareLiteModule> {
  private static final String[] INJECTS = { "members/com.paylogic.scanwarelite.activities.LoginActivity", "members/com.paylogic.scanwarelite.activities.EventsActivity", "members/com.paylogic.scanwarelite.activities.ProductsActivity", "members/com.paylogic.scanwarelite.activities.ScanActivity", "members/com.paylogic.scanwarelite.activities.SettingsActivity", "members/com.paylogic.scanwarelite.activities.StatisticsActivity", };
  private static final Class<?>[] STATIC_INJECTIONS = { };
  private static final Class<?>[] INCLUDES = { };

  public ScanwareLiteModule$$ModuleAdapter() {
    super(com.paylogic.scanwarelite.ScanwareLiteModule.class, INJECTS, STATIC_INJECTIONS, false /*overrides*/, INCLUDES, true /*complete*/, false /*library*/);
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getBindings(BindingsGroup bindings, ScanwareLiteModule module) {
    bindings.contributeProvidesBinding("com.paylogic.scanwarelite.helpers.ConnectivityHelper", new ProvideConnectivityHelperProvidesAdapter(module));
    bindings.contributeProvidesBinding("com.paylogic.scanwarelite.helpers.DatabaseHelper", new ProvideDatabaseHelperProvidesAdapter(module));
    bindings.contributeProvidesBinding("com.paylogic.scanwarelite.helpers.PreferenceHelper", new ProvidePreferenceHelperProvidesAdapter(module));
  }

  /**
   * A {@code Binding<com.paylogic.scanwarelite.helpers.ConnectivityHelper>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<com.paylogic.scanwarelite.helpers.ConnectivityHelper>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideConnectivityHelperProvidesAdapter extends ProvidesBinding<com.paylogic.scanwarelite.helpers.ConnectivityHelper>
      implements Provider<com.paylogic.scanwarelite.helpers.ConnectivityHelper> {
    private final ScanwareLiteModule module;

    public ProvideConnectivityHelperProvidesAdapter(ScanwareLiteModule module) {
      super("com.paylogic.scanwarelite.helpers.ConnectivityHelper", NOT_SINGLETON, "com.paylogic.scanwarelite.ScanwareLiteModule", "provideConnectivityHelper");
      this.module = module;
      setLibrary(false);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<com.paylogic.scanwarelite.helpers.ConnectivityHelper>}.
     */
    @Override
    public com.paylogic.scanwarelite.helpers.ConnectivityHelper get() {
      return module.provideConnectivityHelper();
    }
  }

  /**
   * A {@code Binding<com.paylogic.scanwarelite.helpers.DatabaseHelper>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<com.paylogic.scanwarelite.helpers.DatabaseHelper>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideDatabaseHelperProvidesAdapter extends ProvidesBinding<com.paylogic.scanwarelite.helpers.DatabaseHelper>
      implements Provider<com.paylogic.scanwarelite.helpers.DatabaseHelper> {
    private final ScanwareLiteModule module;

    public ProvideDatabaseHelperProvidesAdapter(ScanwareLiteModule module) {
      super("com.paylogic.scanwarelite.helpers.DatabaseHelper", NOT_SINGLETON, "com.paylogic.scanwarelite.ScanwareLiteModule", "provideDatabaseHelper");
      this.module = module;
      setLibrary(false);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<com.paylogic.scanwarelite.helpers.DatabaseHelper>}.
     */
    @Override
    public com.paylogic.scanwarelite.helpers.DatabaseHelper get() {
      return module.provideDatabaseHelper();
    }
  }

  /**
   * A {@code Binding<com.paylogic.scanwarelite.helpers.PreferenceHelper>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<com.paylogic.scanwarelite.helpers.PreferenceHelper>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvidePreferenceHelperProvidesAdapter extends ProvidesBinding<com.paylogic.scanwarelite.helpers.PreferenceHelper>
      implements Provider<com.paylogic.scanwarelite.helpers.PreferenceHelper> {
    private final ScanwareLiteModule module;

    public ProvidePreferenceHelperProvidesAdapter(ScanwareLiteModule module) {
      super("com.paylogic.scanwarelite.helpers.PreferenceHelper", NOT_SINGLETON, "com.paylogic.scanwarelite.ScanwareLiteModule", "providePreferenceHelper");
      this.module = module;
      setLibrary(false);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<com.paylogic.scanwarelite.helpers.PreferenceHelper>}.
     */
    @Override
    public com.paylogic.scanwarelite.helpers.PreferenceHelper get() {
      return module.providePreferenceHelper();
    }
  }
}

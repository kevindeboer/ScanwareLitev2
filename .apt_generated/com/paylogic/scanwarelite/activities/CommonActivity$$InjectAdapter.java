// Code generated by dagger-compiler.  Do not edit.
package com.paylogic.scanwarelite.activities;

import dagger.MembersInjector;
import dagger.internal.Binding;
import dagger.internal.Linker;
import java.util.Set;
import javax.inject.Provider;

/**
 * A {@code Binding<CommonActivity>} implementation which satisfies
 * Dagger's infrastructure requirements including:
 *
 * Owning the dependency links between {@code CommonActivity} and its
 * dependencies.
 *
 * Being a {@code Provider<CommonActivity>} and handling creation and
 * preparation of object instances.
 *
 * Being a {@code MembersInjector<CommonActivity>} and handling injection
 * of annotated fields.
 */
public final class CommonActivity$$InjectAdapter extends Binding<CommonActivity>
    implements Provider<CommonActivity>, MembersInjector<CommonActivity> {
  private Binding<com.paylogic.scanwarelite.helpers.ConnectivityHelper> connHelper;
  private Binding<com.paylogic.scanwarelite.helpers.DatabaseHelper> databaseHelper;
  private Binding<com.paylogic.scanwarelite.helpers.PreferenceHelper> preferenceHelper;

  public CommonActivity$$InjectAdapter() {
    super("com.paylogic.scanwarelite.activities.CommonActivity", "members/com.paylogic.scanwarelite.activities.CommonActivity", NOT_SINGLETON, CommonActivity.class);
  }

  /**
   * Used internally to link bindings/providers together at run time
   * according to their dependency graph.
   */
  @Override
  @SuppressWarnings("unchecked")
  public void attach(Linker linker) {
    connHelper = (Binding<com.paylogic.scanwarelite.helpers.ConnectivityHelper>) linker.requestBinding("com.paylogic.scanwarelite.helpers.ConnectivityHelper", CommonActivity.class, getClass().getClassLoader());
    databaseHelper = (Binding<com.paylogic.scanwarelite.helpers.DatabaseHelper>) linker.requestBinding("com.paylogic.scanwarelite.helpers.DatabaseHelper", CommonActivity.class, getClass().getClassLoader());
    preferenceHelper = (Binding<com.paylogic.scanwarelite.helpers.PreferenceHelper>) linker.requestBinding("com.paylogic.scanwarelite.helpers.PreferenceHelper", CommonActivity.class, getClass().getClassLoader());
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getDependencies(Set<Binding<?>> getBindings, Set<Binding<?>> injectMembersBindings) {
    injectMembersBindings.add(connHelper);
    injectMembersBindings.add(databaseHelper);
    injectMembersBindings.add(preferenceHelper);
  }

  /**
   * Returns the fully provisioned instance satisfying the contract for
   * {@code Provider<CommonActivity>}.
   */
  @Override
  public CommonActivity get() {
    CommonActivity result = new CommonActivity();
    injectMembers(result);
    return result;
  }

  /**
   * Injects any {@code @Inject} annotated fields in the given instance,
   * satisfying the contract for {@code Provider<CommonActivity>}.
   */
  @Override
  public void injectMembers(CommonActivity object) {
    object.connHelper = connHelper.get();
    object.databaseHelper = databaseHelper.get();
    object.preferenceHelper = preferenceHelper.get();
  }

}
